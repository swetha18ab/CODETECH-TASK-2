# -*- coding: utf-8 -*-
"""Copy of Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aC5RT5k8KbNd7jq1Dn4Vb_cXhrJk0G14
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,r2_score
import matplotlib.pyplot as plt
import seaborn as sns

boston_df = pd.read_csv("boston.csv")
print(boston_df.head())
print(boston_df.describe())

sns.pairplot(boston_df)
plt.show()

correlation_matrix=boston_df.corr().round(2)

sns.heatmap(data=correlation_matrix, annot=True)
plt.show()

x=boston_df.drop('MEDV',axis=1)
y=boston_df['MEDV']

x_train,x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)

scaler=StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

model = LinearRegression()
model.fit(x_train, y_train)
y_train_pred = model.predict(x_train)
y_test_pred = model.predict(x_test)

train_mse = mean_squared_error(y_train, y_train_pred)
train_r2 = r2_score(y_train, y_train_pred)
test_mse = mean_squared_error(y_test, y_test_pred)
test_r2 = r2_score(y_test, y_test_pred)

print(f'Training MSE: {train_mse}, Training R2:{train_r2}')
print(f'Testing MSE: {test_mse}, Testing R2:{test_r2}')

plt.scatter(y_test, y_test_pred)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual vs Predicted Prices')
plt.show()

